import{l as n,H as l,c as p,b as d,v as a,a4 as h,i as t,K as e}from"./chunks/framework.gRbM0Ghu.js";const A=JSON.parse('{"title":"FmMultiStepLoader 多步骤加载器","description":"","frontmatter":{},"headers":[],"relativePath":"components/fm-multi-step-loader.md","filePath":"components/fm-multi-step-loader.md"}'),r={name:"components/fm-multi-step-loader.md"},k={id:"fmmultisteploader-多步骤加载器",tabindex:"-1"};function o(g,s,c,y,m,F){const i=l("Badge");return d(),p("div",null,[a("h1",k,[s[0]||(s[0]=t("FmMultiStepLoader 多步骤加载器 ",-1)),e(i,{type:"pro",text:"专业版"}),s[1]||(s[1]=t()),e(i,{text:"v1.2.0"}),s[2]||(s[2]=t()),s[3]||(s[3]=a("a",{class:"header-anchor",href:"#fmmultisteploader-多步骤加载器","aria-label":'Permalink to "FmMultiStepLoader 多步骤加载器 <Badge type="pro" text="专业版" /> <Badge text="v1.2.0" />"'},"​",-1))]),s[4]||(s[4]=h(`<h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>loading</td><td>是否加载中</td><td><code>boolean</code></td><td><code>false</code></td></tr><tr><td>steps</td><td>步骤数组</td><td><code>Step[]</code></td><td><code>[]</code></td></tr><tr><td>preventClose</td><td>是否阻止关闭</td><td><code>boolean</code></td><td><code>false</code></td></tr></tbody></table><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Step</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 步骤文本</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  afterText</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 步骤完成后的文本</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 步骤返回数据对象名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  action</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">context</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StepContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 步骤执行的函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,3))])}const u=n(r,[["render",o]]);export{A as __pageData,u as default};
